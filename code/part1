 调用nCov2019数据
library(remotes)
remotes::install_github("GuangchuangYu/nCov2019", dependencies = TRUE) 
library(nCov2019) 
 绘制全球疫情地图
library(maps) 
x = get_nCov2019()#此时的环境默认为中文
plot(x) 
 绘制全球疫情地图（包含中国各省份数据）
remotes::install_github("GuangchuangYu/chinamap")
library(chinamap)
cn = get_map_china()
plot(x, chinamap=cn)
 绘制外国疫情地图
x = get_nCov2019(lang = 'en')#此时应设置为英文
plot(x, region='Japan')
 绘制中国疫情地图
library(chinamap)
cn = get_map_china()
plot(x, region='china', chinamap=cn)#默认数据为连续型数据

plot(x, region='china', chinamap=cn,
     continuous_scale=FALSE,palette='Greens',date='2020-02-15')
 绘制省市疫情地图
m = sf::st_read(".../市界.shp")
x = get_nCov2019()
plot(x, region='湖北', chinamap=m)
 多个省市疫情地图
plot(x, region=c('广东','福建'),chinamap=m)
- 绘制疫情变化图(全国)
library(magick)
library(chinamap)
cn = get_map_china()
y <- load_nCov2019()#载入nCov2019数据
d <- c(paste0("2020-01-", 24:31), 
       paste0("2020-02-", 1:10))#确定数据框
img <- image_graph(600, 450, res = 96)#打开图形设备
out <- lapply(d, function(date)
{
  p <- plot(y, region='china', chinamap=cn, date=date,
            label=FALSE)#绘制每一"帧"图像
  print(p)
})
dev.off()#关闭图形设备

animation <- image_animate(img, fps = 2)#fps控制放映速度
image_write(animation, "ncov2019.gif")
